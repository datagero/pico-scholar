openapi: 3.0.0
info:
  title: Research Project API
  description: "API for managing research projects, performing vector searches, and\
    \ interacting with documents."
  termsOfService: http://swagger.io/terms/
  contact:
    email: datagero@outlook.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://virtserver.swaggerhub.com/
  description: SwaggerHub API Auto Mocking
tags:
- name: Systemic Literature Review
  description: PRISMA guidelines for an overview
  externalDocs:
    description: Find out more
    url: https://www.prisma-statement.org/
paths:
  /:
    get:
      summary: Root path
      description: This is the root of the API
      operationId: swagger_server_controllers_test_controller_root_get
      responses:
        "200":
          description: Root path
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects:
    get:
      summary: Get a list of all available project IDs and Names
      operationId: projects_get
      responses:
        "200":
          description: List of projects retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                x-content-type: application/json
        "402":
          description: No projects found
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}:
    get:
      summary: Get search query history for a given project
      operationId: projects_project_id_get
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Search query history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchQueryHistory'
        "404":
          description: Project not found or no search history available
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/add_searchQuery:
    post:
      summary: Add a search query to the history
      operationId: projects_project_id_add_search_query_post
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectId_add_searchQuery_body'
        required: true
      responses:
        "201":
          description: Search query added to history successfully
        "400":
          description: Invalid request or query data
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/search:
    post:
      summary: Perform a research query vector search
      operationId: projects_project_id_search_post
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projectId_search_body'
        required: true
      responses:
        "200":
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'
                x-content-type: application/json
        "400":
          description: Invalid search query
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/query/{queryId}/funnel_overview:
    get:
      summary: Get funnel statuses and item counts
      operationId: projects_project_id_query_query_id_funnel_overview_get
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Funnel statuses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FunnelStatus'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/query/{queryId}/funnel/{status}:
    get:
      summary: Get records filtered by funnel status
      operationId: projects_project_id_query_query_id_funnel_status_get
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Filtered records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/query/{queryId}/funnel/status:
    patch:
      summary: Bulk update the status of selected records
      operationId: projects_project_id_query_query_id_funnel_status_patch
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/funnel_status_body'
        required: true
      responses:
        "200":
          description: Status updated successfully
        "400":
          description: Invalid update data
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/query/{queryId}/funnel/reviewed:
    patch:
      summary: Bulk update the reviewed marker of selected records
      operationId: projects_project_id_query_query_id_funnel_reviewed_patch
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/funnel_reviewed_body'
        required: true
      responses:
        "200":
          description: Reviewed marker updated successfully
        "400":
          description: Invalid update data
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/query/{queryId}/data:
    post:
      summary: Retrieve data for a specific search query
      operationId: projects_project_id_query_query_id_data_post
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Data retrieved successfully for the specified search query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'
                x-content-type: application/json
        "404":
          description: Project or Query not found
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /projects/{projectId}/query/{queryId}/search:
    post:
      summary: Perform a semantic search on the records
      operationId: projects_project_id_query_query_id_search_post
      parameters:
      - name: projectId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queryId_search_body'
        required: true
      responses:
        "200":
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: List of paper IDs matching the search query
                x-content-type: application/json
        "400":
          description: Invalid search query
      x-openapi-router-controller: swagger_server.controllers.test_controller
  /documents/{documentId}/chat:
    post:
      summary: Chat with a specific document
      operationId: documents_document_id_chat_post
      parameters:
      - name: documentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/documentId_chat_body'
        required: true
      responses:
        "200":
          description: Response to the question retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentChatResponse'
        "404":
          description: Document not found
      x-openapi-router-controller: swagger_server.controllers.test_controller
components:
  schemas:
    Project:
      type: object
      properties:
        projectId:
          type: string
        name:
          type: string
      example:
        name: name
        projectId: projectId
    SearchQueryHistory:
      type: object
      properties:
        projectId:
          type: string
        queryId:
          type: string
        query:
          type: string
        timestamp:
          type: string
          format: date-time
      example:
        query: query
        projectId: projectId
        queryId: queryId
        timestamp: 2000-01-23T04:56:07.000+00:00
    FunnelStatus:
      type: object
      properties:
        status:
          type: string
        count:
          type: integer
      example:
        count: 0
        status: status
    SearchResult:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        year:
          type: integer
        abstract:
          type: string
        pico:
          $ref: '#/components/schemas/SearchResult_pico'
      example:
        pico:
          p: p
          c: c
          i: i
          o: o
        year: 0
        author: author
        id: id
        abstract: abstract
        title: title
    DocumentChatResponse:
      type: object
      properties:
        response:
          type: string
      example:
        response: response
    projectId_add_searchQuery_body:
      type: object
      properties:
        query:
          type: string
          description: The search query to add to history
    projectId_search_body:
      type: object
      properties:
        query:
          type: string
          description: The research query to be performed
    funnel_status_body:
      type: object
      properties:
        recordIds:
          type: array
          items:
            type: string
        newStatus:
          type: string
          description: New status to apply to the records
    funnel_reviewed_body:
      type: object
      properties:
        recordIds:
          type: array
          items:
            type: string
        reviewed:
          type: boolean
          description: Reviewed marker (true/false)
    queryId_search_body:
      type: object
      properties:
        searchQuery:
          type: string
          description: The natural language search query
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Optional metadata to refine the search
    documentId_chat_body:
      type: object
      properties:
        question:
          type: string
          description: The natural language question
    SearchResult_pico:
      type: object
      properties:
        p:
          type: string
        i:
          type: string
        c:
          type: string
        o:
          type: string
      example:
        p: p
        c: c
        i: i
        o: o

