# .gitpod.yml

image: 
  file: .gitpod.Dockerfile

tasks:
  - name: "Set up .env_docker"
    command: |
      echo "DEVELOPER_NAME=$DEVELOPER_NAME" >> backend/.env_docker
      echo "TIDB_HOST=$TIDB_HOST" >> backend/.env_docker
      echo "TIDB_USERNAME=$TIDB_USERNAME" >> backend/.env_docker
      echo "TIDB_PORT=$TIDB_PORT" >> backend/.env_docker
      echo "TIDB_DB_NAME=$TIDB_DB_NAME" >> backend/.env_docker
      echo "MYSQL_HOST=$MYSQL_HOST" >> backend/.env_docker
      echo "MYSQL_USERNAME=$MYSQL_USERNAME" >> backend/.env_docker
      echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> backend/.env_docker
      echo "MYSQL_PORT=$MYSQL_PORT" >> backend/.env_docker
      echo "MYSQL_DB_NAME=$MYSQL_DB_NAME" >> backend/.env_docker
      echo "PYTHONPATH=$PYTHONPATH" >> backend/.env_docker
      echo "FASTAPI_HOST=$FASTAPI_HOST" >> backend/.env_docker
      echo "FASTAPI_PORT=$FASTAPI_PORT" >> backend/.env_docker

  - name: "Set React API Base URL"
    command: |
      # Insert the port number after 'https://'
      export REACT_APP_API_BASE_URL=$(echo $GITPOD_WORKSPACE_URL | sed -e 's#https://#https://8000-#')
      echo "REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}" >> frontend/lamatidb/.env
      export REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}

  - name: "Create Network"
    command: |
      # Create Network do docker-compose can find it
      docker network create mynetwork || true
  
  - name: "Start Docker Compose Services"
    init: |
      # Collect TiDB password and OpenAI key for application
      read -s -p 'Enter TiDB Password: ' TIDB_PASSWORD && echo "" && echo "TIDB_PASSWORD=$TIDB_PASSWORD" >> backend/.env_docker
      read -s -p 'Enter OPENAI_API_KEY: ' OPENAI_API_KEY && echo "" && echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> backend/.env_docker

      # Build and start all services defined in the docker-compose.yml
      docker-compose up --build

    command: |
      # Wait for MySQL to be up and running (optional)
      while ! docker logs mysql-container 2>&1 | grep "ready for connections"; do
        echo "Waiting for MySQL to be up..."
        sleep 1
      done
      echo "MySQL is up and running!"
      sudo chmod -R 777 /workspace/pico-scholar/backend/mysql_data/

ports:
  - port: 3000
    onOpen: open-preview
    visibility: public
  - port: 8000
    visibility: public
